{"version":3,"sources":["App.js"],"names":["App","useState","name","setName","useEffect","a","async","AsyncStorage","getItem","alert","load","style","styles","container","colors","height","input","onChangeText","text","buttons","onPress","setItem","color","remove","Alert","console","log","removeItem","cancelable","fontSize","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","bottom","views","paddingBottom","borderWidth","borderColor","alignSelf","margin","borderRadius","paddingHorizontal","fontWeight","paddingVertical","marginTop","marginHorizontal","top"],"mappings":"2OAOe,SAASA,IAAO,IAAD,EACTC,qBADS,WACvBC,EADuB,KAClBC,EADkB,KAyB5BC,qBAAU,YAZC,mBAAAC,EAAAC,OAAA,2EAAAD,EAAA,MAEQE,IAAaC,QAAQ,WAF7B,OAGI,QADPN,EAFG,SAILC,EAAQD,GAJH,gDAQPO,MAAM,EAAD,IARE,gEAaTC,KACA,IA4BF,OACI,kBAAC,IAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAAC,IAAD,CAAMF,MAAOC,EAAOE,QAApB,SACA,kBAAC,IAAD,CAAMH,MAAO,CAACI,OAAO,KAAMb,GAC3B,kBAAC,IAAD,yBACA,kBAAC,IAAD,CAAWS,MAAOC,EAAOI,MAAOC,aAAc,SAAAC,GAAI,OAAEf,EAAQe,MAC5D,kBAAC,IAAD,CAAkBP,MAAOC,EAAOO,QAASC,QAAS,kBA3D7C,EAAAf,EAAAC,OAAA,8DAEJJ,EAAK,GAFD,kCAAAG,EAAA,MAGCE,IAAac,QAAQ,SAASnB,IAH/B,6BAKLO,MAAM,wBALD,uDAQPA,MAAM,EAAD,IARE,kEA4DH,kBAAC,IAAD,CAAME,MAAO,CAACW,MAAM,UAApB,mBAEF,kBAAC,IAAD,CAAkBX,MAAOC,EAAOW,OAAQH,QA3B3B,kBACjBI,IAAMf,MACJ,UACA,gBACA,CACE,CACES,KAAM,KACNE,QAAS,kBAAMK,QAAQC,IAAI,wBAC3Bf,MAAO,UAET,CACEO,KAAM,MACNE,QAAS,kBArBF,EAAAf,EAAAC,OAAA,2EAAAD,EAAA,MAELE,IAAaoB,WAAW,WAFnB,sDAIXlB,MAAM,EAAD,IAJM,uBAMXN,EAAQ,IANG,oFAyBX,CAAEyB,YAAY,MAYV,kBAAC,IAAD,CAAMjB,MAAO,CAACW,MAAM,UAAWO,SAAS,KAAxC,mBAMV,IAAMjB,EAASkB,IAAWC,OAAO,CAC/BlB,UAAW,CACTmB,KAAM,EACNC,gBAAiB,UACjBC,WAAY,SACZC,eAAgB,UAElBrB,OAAQ,CACNQ,MAAM,QACNY,WAAW,SACXC,eAAe,SACfN,SAAS,GACTO,SAAS,WACTC,OAAQ,KAEVC,MAAO,CACLC,cAAc,IAEhBvB,MAAM,CACJwB,YAAY,EACZC,YAAY,UACZC,UAAU,UACVC,OAAO,GACP5B,OAAO,GACP6B,aAAa,EACbC,kBAAkB,GAClBhB,SAAS,GACTiB,WAAW,OAGb3B,QAAQ,CACNc,gBAAgB,UAChBC,WAAW,SACXC,eAAe,SACfO,UAAU,UACVK,gBAAgB,GAChBF,kBAAkB,GAClBG,UAAU,GACVC,iBAAiB,GACjBL,aAAa,GAEfrB,OAAO,CACLU,gBAAgB,UAChBC,WAAW,SACXC,eAAe,SACfY,gBAAgB,GAChBF,kBAAkB,GAClBG,UAAU,GACVC,iBAAiB,GACjBL,aAAa,EACbR,SAAS,WACTc,IAAI,Q","file":"static/js/app.75e9244b.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, {useState, useEffect} from 'react';\nimport { Button, SafeAreaView,StyleSheet, Text, TextInput, View, Alert,TouchableOpacity,TouchableWithoutFeedback} from 'react-native';\nimport { createAppContainer } from 'react-navigation';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\n\nexport default function App() {\n  let [name,setName]=useState();\n  const save=async () =>{\n    try{\n      if(name>0){\n        await AsyncStorage.setItem(\"MyName\",name);\n      }else{\n        alert(\"Enter a valid number\");\n      }\n    }catch(e){\n      alert(e);\n    }\n  }\n  const load=async () =>{\n    try{\n      let name=await AsyncStorage.getItem(\"MyName\");\n      if (name!==null){\n        setName(name);\n      }\n    \n    }catch(e){\n      alert(e);\n    }\n\n  }\n  useEffect(()=>{\n    load()\n  },[]);\n  const remove = async()=>{\n    try{\n      await AsyncStorage.removeItem(\"MyName\");\n    }catch(e){\n      alert(e);\n    }finally{\n      setName(\"\");\n    }\n  }\n  const send_alert = () =>\n    Alert.alert(\n      \"WARNING\",\n      \"Are you sure?\",\n      [\n        {\n          text: \"NO\",\n          onPress: () => console.log(\"Ok, you aren't sure\"),\n          style: \"cancel\"\n        },\n        {\n          text: \"YES\",\n          onPress: () => remove(),\n\n        },\n      ],\n      { cancelable: false }\n    );\n  return (\n      <View style={styles.container}>\n        <Text style={styles.colors}>Money</Text>\n        <Text style={{height:30}}>{name}</Text>\n        <Text>Enter your money</Text>\n        <TextInput style={styles.input} onChangeText={text=>setName(text)}/>\n        <TouchableOpacity style={styles.buttons} onPress={()=>save()}>\n          <Text style={{color:\"white\"}}>Save the money</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.remove} onPress={send_alert}>\n          <Text style={{color:\"#ff1616\", fontSize:12}}>Warning:RESET</Text>\n        </TouchableOpacity>\n      </View>\n  );\n\n}\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#b90000',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  colors: {\n    color:'white',\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    fontSize:25,\n    position:'relative',\n    bottom: 100,\n  },\n  views: {\n    paddingBottom:10,\n  },\n  input:{\n    borderWidth:1,\n    borderColor:\"#575DD9\",\n    alignSelf:\"stretch\",\n    margin:32,\n    height:64,\n    borderRadius:6,\n    paddingHorizontal:16,\n    fontSize:16,\n    fontWeight:\"300\",\n\n  },\n  buttons:{\n    backgroundColor:\"#575DD9\",\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    alignSelf:\"stretch\",\n    paddingVertical:12,\n    paddingHorizontal:32,\n    marginTop:32,\n    marginHorizontal:32,\n    borderRadius:6,\n  },\n  remove:{\n    backgroundColor:\"#fff64d\",\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    paddingVertical:10,\n    paddingHorizontal:20,\n    marginTop:32,\n    marginHorizontal:32,\n    borderRadius:6,\n    position:\"relative\",\n    top:100\n  }\n\n\n});"],"sourceRoot":""}